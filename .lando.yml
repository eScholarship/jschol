---
name: jschol
# CAREFUL with this env file, Docker env files don't support interpolation!
env_file:
  - defaults.env
  - local.env
services:
  appserver:
    type: ruby:custom
    ports:
      - '18880:18880'
    overrides:
      image: ruby:3.0-buster
      platform: linux/amd64
      # Pass SSH auth.
      volumes:
        - type: bind
          # Linux user: add 'export LANDO_SSH_AUTH_SOCK="${SSH_AUTH_SOCK}' at the end of your ~/.bashrc:
          # Mac user: MacOS specific path is here as the variable default value, nothing to do.
          source: "${LANDO_SSH_AUTH_SOCK:-/run/host-services/ssh-auth.sock}"
          target: /run/host-services/ssh-auth.sock
      environment:
        SSH_AUTH_SOCK: "/run/host-services/ssh-auth.sock"
        GEM_HOME: "/usr/local/bundle"
        PATH: "/usr/local/bundle/bin:/usr/local/bundle/gems/bin:${PATH}"
        QT_QPA_PLATFORM: offscreen
      ports:
        - '18880:18880'
    command:
      - if [ ! -L /var/www/.aws ]; then ln -s /user/.aws /var/www/.aws; fi
      - /app/gulp
    build_as_root:
      - apt-get update -qq && apt-get install -y apt-transport-https && apt-get install glibc-source
      - apt-get install -y phantomjs vim net-tools
      - curl -sL https://deb.nodesource.com/setup_18.x | grep -v sleep | bash -
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - apt-get update -qq
      - apt-get autoclean
      - apt-get install mariadb-client build-essential libpq-dev yarn nodejs -y
      - gem install bundler
      # - gem install foreman
      - apt-get autoclean
      - chown www-data:www-data /run/host-services/ssh-auth.sock
      - chmod g+w /run/host-services/ssh-auth.sock
      - chown www-data:www-data -R /usr/local/bundle

    build:
      - cd /app && /app/make-dev-symlinks.sh
      - cd /app && /app/setup.sh
    run:
    run_as_root:
      - chown www-data:www-data /run/host-services/ssh-auth.sock
      - chmod g+w /run/host-services/ssh-auth.sock
      - apt-get install -y less zip jq groff
      - if [ ! -d /app/aws ]; then (curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip  -nqq awscliv2.zip); fi
      - if [ -d /app/aws ]; then /app/aws/install; fi

    moreHttpPorts:
      - '18880'
    scanner: false

events:
  pre-destroy:
    - appserver: rm -Rf /app/gems/*
    - appserver: rm -f /app/.mysqlpsk.3306.*
  pre-stop:
    - appserver: rm -f /app/.mysqlpsk.3306.*
  post-start:
    - appserver: test -e ~/.ssh/config || printf 'Host *\n  AddKeysToAgent yes\n' > ~/.ssh/config

tooling:
  npm:
    service: appserver
    description: Runs npm commands on the Lando Jschol appserver
  yarn:
    service: appserver
    description: Runs yarn commands on the Lando Jschol appserver
    cmd: yarn
    dir: /app
  ruby:
    service: appserver
    description: Runs ruby commands on the Lando Jschol appserver
  bundle:
    service: appserver
    description: Runs bundle commands on the Lando Jschol appserver
  gem:
    service: appserver
    description: Runs gem commands on the Lando Jschol appserver
  just-test:
    service: appserver
    cmd: ruby tools/maybeSocks.rb && ruby test/quick.rb
    description: Runs the quicktest suite on the Lando Jschol appserver
    env:
      SCHEME: http
  irb:
    service: appserver
    cmd: GEM_PATH=/app/gems/gems irb
    dir: /app
    description: Runs irb on the Jschol appserver (for some good REPL fun)
  deploy:
    service: appserver
    cmd: ruby tools/maybeSocks.rb && /app/deployVersion.sh
    description: Runs the deployment script to deploy to Elastic Beanstalk
  promote:
    service: appserver
    cmd: /app/promoteVersion.sh
    description: Promote an Elastic Beanstalk app from one environment to another
  aws:
    service: appserver
    cmd: aws --profile pub
    dir: /app
    description: Runs AWS-cli commands on the Jschol appserver
  watch-stg:
    service: appserver
    cmd: watch -d aws --profile pub elasticbeanstalk describe-environments --environment-name eb-pub-jschol2-stg
    description: Watches eb-pub-jschol2-stg aws environment details for updates.
  watch-dev:
    service: appserver
    cmd: watch -d aws --profile pub elasticbeanstalk describe-environments --environment-name eb-pub-jschol2-dev
    description: Watches eb-pub-jschol2-dev aws environment details for updates.
  watch-prd:
    service: appserver
    cmd: watch -d aws --profile pub elasticbeanstalk describe-environments --environment-name eb-pub-jschol2-prd
    description: Watches eb-pub-jschol2-prd aws environment details for updates.
  test:
    service: appserver
    cmd: bundle exec rubocop && npx eslint . && ruby tools/maybeSocks.rb && ruby test/quick.rb
    description: Runs the quicktest suite on the Lando Jschol appserver
    env:
      SCHEME: http
  test-prd:
    service: appserver
    cmd: ruby test/quick.rb
    env:
      PUMA_PORT: 443
      SCHEME: https
      TARGET_HOST: escholarship.org
    description: Runs the quicktest suite against production Jschol
  #NOTE: tooling for testing stg and dev does not belong in this file, which is publicly available, please add it to your .lando.local.yml file instead
  socks:
    service: appserver
    cmd:
      - ruby tools/maybeSocks.rb && echo "==> running netstat -tunl to confirm SOCKS_PORT is open <==" && netstat -tunl | grep ${SOCKS_PORT}
    description: Sets the socks proxy tunnel back up, if you have been too idle
  ssh-fix:
    service: appserver
    description: Fix ssh auth sock permission for MacOS users. Lando rebuild fixes the problem as well.
    user: root
